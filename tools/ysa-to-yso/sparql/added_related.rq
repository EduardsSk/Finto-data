PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX dsv: <http://purl.org/iso25964/DataSet/Versioning#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX sd: <http://www.w3.org/ns/sparql-service-description#>
PREFIX sh: <http://purl.org/skos-history/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX xhv: <http://www.w3.org/1999/xhtml/vocab#>
PREFIX zbwext: <http://zbw.eu/namespaces/zbw-extensions/>
#
# Added related relations to already existing concepts
# (newly introduced related concepts flagged)
#
SELECT DISTINCT ?concept ?conceptLabel ?relatedConcept ?relatedConceptLabel
?new
#SELECT (count(?concept) AS ?ccount)
WHERE {
  # parameters
  VALUES ( ?versionHistoryGraph ?oldVersion ?newVersion ?conceptType ) {
    ( <http://www.yso.fi/onto/ysa/version> undef undef skos:Concept )
  }
  GRAPH ?versionHistoryGraph {
    # get the current and the previous version as default versions
    ?versionset dsv:currentVersionRecord/xhv:prev/dc:identifier ?previousVersion .
    ?versionset dsv:currentVersionRecord/dc:identifier ?latestVersion .
    # select the versions to actually use
    BIND(coalesce(?oldVersion, ?previousVersion) AS ?oldVersionSelected)
    BIND(coalesce(?newVersion, ?latestVersion) AS ?newVersionSelected)
    # get the delta and via that the relevant graphs
    ?delta a sh:SchemeDelta ;
      sh:deltaFrom/dc:identifier ?oldVersionSelected ;
      sh:deltaTo/dc:identifier ?newVersionSelected ;
      sh:deltaFrom/sh:usingNamedGraph/sd:name ?oldVersionGraph ;
      sh:deltaTo/sh:usingNamedGraph/sd:name ?newVersionGraph ;
      dcterms:hasPart ?insertions ;
      dcterms:hasPart ?deletions .
    ?insertions a sh:SchemeDeltaInsertions ;
      sh:usingNamedGraph/sd:name ?insertionsGraph .
    ?deletions a sh:SchemeDeltaDeletions ;
      sh:usingNamedGraph/sd:name ?deletionsGraph .
  }
  
  # newly inserted related relations
  GRAPH ?insertionsGraph {
    ?concept skos:related ?relatedConcept .
  }
  # ... for already existing concepts
  FILTER exists {
    GRAPH ?oldVersionGraph {
      ?concept ?p []
    }
  }
  # restrict to ?conceptType
  GRAPH ?newVersionGraph {
#    ?concept a ?conceptType .
      ?concept skos:prefLabel ?conceptLabel .
#    ?relatedConcept a ?conceptType .
      ?relatedConcept skos:prefLabel ?relatedConceptLabel .
  }

  # flag related concepts which were newly introduced
  OPTIONAL {
    BIND ('X' AS ?new)
    FILTER not exists {
      GRAPH ?oldVersionGraph {
        ?relatedConcept ?p [] .
      }
    }
  }
}
ORDER BY ?conceptLabel ?relatedConceptLabel
