PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX ysa: <http://www.yso.fi/onto/ysa/>
PREFIX yso: <http://www.yso.fi/onto/yso/>
PREFIX ysa-meta: <http://www.yso.fi/onto/ysa-meta/>
PREFIX yso-meta: <http://www.yso.fi/onto/yso-meta/2007-03-02/>
PREFIX yso-update: <http://www.yso.fi/onto/yso-update/>
PREFIX dc: <http://purl.org/dc/elements/1.1/> 
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX om: <http://www.yso.fi/onto/yso-peilaus/2007-03-02/>
PREFIX dsv: <http://purl.org/iso25964/DataSet/Versioning#>
PREFIX sh: <http://purl.org/skos-history/>
PREFIX sd: <http://www.w3.org/ns/sparql-service-description#>

CONSTRUCT {
  ?newc om:definedConcept ?c .
  ?newc a yso-meta:Concept .
  ?newc skos:prefLabel ?pref .
  ?newc skos:altLabel ?alt .
  ?newc skos:note ?note .
  ?newc skos:definition ?definition .
  ?newc yso-meta:ysaSource ?source .
  ?newc yso-meta:hasThematicGroup ?ysogroup .
  ?newc rdfs:subClassOf ?ysobroader .
  ?newc rdfs:subClassOf yso-update:uudet .
  ?newc skos:related ?ysorelated .
  ?ysorelated skos:related ?newc .
  ?newc dct:created ?created .
}
WHERE {
  SERVICE <http://sparql.dev.finto.fi/skos-history/sparql> {
    GRAPH <http://www.yso.fi/onto/ysa/version> {
      # find the graph URI of the latest available version of YSA
      ?versionset dsv:currentVersionRecord/sh:usingNamedGraph/sd:name ?newVersionGraph .
    }
    GRAPH ?newVersionGraph {
#      VALUES ?c { ysa:Y206889 ysa:Y202985 }
      ?c a skos:Concept .
      FILTER NOT EXISTS { ?c a ysa-meta:GeographicalConcept }
      # optimization: don't return concepts which have a match in YSO
      FILTER NOT EXISTS {
        ?c skos:closeMatch ?ysoc .
        FILTER (STRSTARTS(STR(?ysoc), STR(yso:)))
      }
      ?c skos:prefLabel ?pref .
      OPTIONAL { ?c skos:altLabel ?alt }
      OPTIONAL { ?c skos:scopeNote|skos:note ?note }
      OPTIONAL { ?c skos:definition ?definition }
      OPTIONAL { ?c dc:source ?source }
      OPTIONAL { ?ysagroup skos:member ?c }
      BIND(IF(BOUND(?ysagroup), ?ysagroup, 'g') AS ?realysagroup)
      OPTIONAL { ?c dct:created ?created }

      # broader, related
      OPTIONAL { ?c skos:broader ?ysab }
      BIND(IF(BOUND(?ysab), ?ysab, 'b') AS ?broader)
      OPTIONAL { ?c skos:related ?ysar }
      BIND(IF(BOUND(?ysar), ?ysar, 'r') AS ?related)
    }  
  }
  BIND(IRI(REPLACE(STR(?c), STR(ysa:), STR(yso:))) as ?newc)
  FILTER NOT EXISTS {
    [] om:definedConcept ?c .
  }
  OPTIONAL { 
    ?ysogroup om:definedConcept ?realysagroup
  }

  # must check whether an equivalent target concept already exists; if not, use a newly minted URI base on YSA localname
  OPTIONAL {
    ?ysob om:definedConcept ?broader
  }
  BIND(
    IF(BOUND(?ysob),
      IF(EXISTS { ?ysob a yso-meta:DeprecatedConcept } || EXISTS { ?ysob a yso-meta:DeprecatedAggregateConcept },
        ?unbound,
        ?ysob
      ), 
      IF(BOUND(?ysab),
        IRI(REPLACE(STR(?ysab), STR(ysa:), STR(yso:))),
        ?unbound
      )
    )
    AS ?ysobroader
  )

  OPTIONAL {
    ?ysor om:definedConcept ?related
  }
  BIND(
    IF(BOUND(?ysor),
      IF(EXISTS { ?ysor a yso-meta:DeprecatedConcept } || EXISTS { ?ysor a yso-meta:DeprecatedAggregateConcept },
        ?unbound,
        ?ysor
      ), 
      IF(BOUND(?ysar),
        IRI(REPLACE(STR(?ysar), STR(ysa:), STR(yso:))),
        ?unbound
      )
    )
    AS ?ysorelated
  )
}
