#!/bin/bash

# set SDB environment vars
. /data/jena-sdb/env.sh

YSODIR=/data/Finto-data-update/vocabularies/yso
TTLFILE=$YSODIR/ysoKehitys-deprecator.ttl
TTLFILENEW=$YSODIR/ysoKehitys-deprecator-out.ttl
DEPRHOME=/var/www/Finto-data/tools/deprecator
CONF=$DEPRHOME/configs/YSO-deprecator-config.txt
EMAILOUTPUT=$DEPRHOME/email.txt
LOG=$DEPRHOME/deprecator.log

cd $DEPRHOME
./compile.sh

# dump from MySQL to Turtle file
sdbdump --sdb=$SDBROOT/sdb-yso.ttl \
  --graph=http://www.yso.fi/onto/yso/ \
  --out=TTL >$TTLFILE

minimumsize=10000
ttlsize=$(du -b "$TTLFILE" | cut -f 1)
# if successful, purify
if [ $ttlsize -ge $minimumsize ]; then
  java -Xmx4G -cp 'lib/*:.' GeneralDeprecator $TTLFILE $CONF $TTLFILENEW $EMAILOUTPUT
  status=$?
  echo "exit status: $status"
  if [ $status -eq 2 ]; then
    echo "sending e-mail"
    mail -t <$EMAILOUTPUT
  fi
fi
ttlsize=$(du -b "$TTLFILENEW" | cut -f 1)
# if successful, load back to SDB (clear it first using sdbtruncate)
if [ $status -ge 1 ]; then
  echo "some concepts have been deprecated"
  if [ $ttlsize -ge $minimumsize ]; then
    echo "loading back to SDB"
    sdbtruncate --sdb=$SDBROOT/sdb-yso.ttl --confirm
    sdbload --sdb=$SDBROOT/sdb-yso.ttl \
      --graph=http://www.yso.fi/onto/yso/ $TTLFILENEW
  fi
fi
