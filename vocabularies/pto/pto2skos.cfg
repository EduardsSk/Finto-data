# Skosify configuration file for transforming PTO into SKOS

# runtime options which correspond to command line parameters
[options]
narrower=True
transitive=False
aggregates=False
debug=False
enrich_mappings=False
break_cycles=True
cleanup_properties=True
cleanup_classes=True
cleanup_unreachable=True
set_modified=True

# define custom RDF namespaces that can then be used in the mappings below (and will also be used in the output file)
# Note that common namespaces are already defined: rdf, rdfs, owl, skos, dc, dct
[namespaces]
inspire=http://paikkatiedot.fi/def/1001002/
inspire-meta=http://www.yso.fi/onto/inspire-meta/
paikhak=http://paikkatiedot.fi/def/1001001/
paikhak-meta=http://www.yso.fi/onto/paikhak-meta/
pto=http://paikkatiedot.fi/def/1001000/
tsk42=http://paikkatiedot.fi/def/1001003/
tsk-meta=http://www.yso.fi/onto/tsk-meta/
skosext=http://purl.org/finnonto/schema/skosext#
isothes=http://purl.org/iso25964/skos-thes#
ysometa=http://www.yso.fi/onto/yso-meta/2007-03-02/
ysopeilaus=http://www.yso.fi/onto/yso-peilaus/2007-03-02/

# define what to do with types in the source vocabulary, i.e. how these map to SKOS constructs
# key: CURIE or localname (string)
# value: CURIE or empty (to delete the instances)
# the <key> instances will be replaced with <value> instances.
# key may start with * which matches any localname prefix
# Note: use period '.' instead of colon ':' as separator in key CURIEs
[types]
ysometa.Concept=skos:Concept
ysometa.AggregateConcept=skos:Concept
ysometa.GroupConcept=isothes:ThesaurusArray,skos:Collection
ysometa.StructuringClass=
paikhak-meta.Concept=pto:PaikhakConcept,skos:Concept
inspire-meta.Concept=pto:InspireConcept,skos:Concept
tsk-meta.Concept=pto:TskConcept,skos:Concept

# define what to do with literal properties on Concepts
# key: CURIE or localname (string)
# value: CURIE or empty (to delete the property)
# the <key> properties will be replaced with <value> properties
# key may start with * which matches any prefix
# Note: use period '.' instead of colon ':' as separator in key CURIEs
[literals]
rdfs.label=skos:prefLabel
rdfs.comment=skos:definition
paikhak-meta.origID=pto:origID
paikhak-meta.definition=skos:definition
paikhak-meta.note=skos:note
paikhak-meta.subject=skos:scopeNote
inspire-meta.note=skos:note
tsk-meta.definition=skos:definition
tsk-meta.note=skos:note
tsk-meta.origID=
tsk-meta.partOf=skosext:partOf
tsk-meta.deprecatedLabel=pto:deprecatedLabel
tsk-meta.subject=skos:scopeNote
ysometa.ysaComment=skos:scopeNote
ysometa.ysaSource=dc:source
ysometa.ysoSource=dc:source
ysometa.allsoSource=dc:source
ysopeilaus.overlaps=
ysopeilaus.overlappedBy=
ysometa.overlapsDefinition=
ysometa.overlappedByDefinition=
ysometa.oldLabel=skos:altLabel

# define what to do with relation properties on Concepts
# key: CURIE or localname (string)
# value: CURIE or empty (to delete the property)
# the <key> properties will be replaced with <value> properties
# key may start with * which matches any prefix
# Note: use period '.' instead of colon ':' as separator in key CURIEs
[relations]
ysometa.associativeRelation=skos:related
ysometa.partOf=skosext:partOf
rdfs.subClassOf=skos:broader
owl.equivalentClass=skos:exactMatch
paikhak-meta.associativeRelation=skos:related
paikhak-meta.partOf=skosext:partOf
inspire-meta.themeConceptRelation=pto:themeConceptRelation
tsk-meta.associativeRelation=skos:related
ysopeilaus.definedConcept=skos:closeMatch
tsk-meta.partOf=skosext:partOf
