# Skosify configuration file for transforming simple OWL or RDFS ontologies into SKOS
#
# Can be used e.g. with the DCMI Type vocabulary:
# wget http://dublincore.org/2010/10/11/dctype.rdf -q -O - | ./skosify.py -c owl2skos.cfg -o dctype-skos.ttl

# runtime options which correspond to command line parameters
[options]
narrower=True
infer=True
debug=False
default_language=fi

# define custom RDF namespaces that can then be used in the mappings below (and will also be used in the output file)
# Note that common namespaces are already defined: rdf, rdfs, owl, skos, dc, dct
[namespaces]
sapo=http://www.yso.fi/onto/sapo/
# FinnONTO SKOS Extensions namespace
skosext=http://purl.org/finnonto/schema/skosext#

# define what to do with types in the source vocabulary, i.e. how these map to SKOS constructs
# key: CURIE or localname (string)
# value: CURIE or empty (to delete the instances)
# the <key> instances will be replaced with <value> instances.
# key may start with * which matches any localname prefix
# Note: use period '.' instead of colon ':' as separator in key CURIEs
[types]

# define what to do with literal properties on Concepts
# key: CURIE or localname (string)
# value: CURIE or empty (to delete the property)
# the <key> properties will be replaced with <value> properties
# key may start with * which matches any prefix
# Note: use period '.' instead of colon ':' as separator in key CURIEs
[literals]
sapo.placename=skos:prefLabel
rdfs.label=skosext:candidateLabel

# define what to do with relation properties on Concepts
# key: CURIE or localname (string)
# value: CURIE or empty (to delete the property)
# the <key> properties will be replaced with <value> properties
# key may start with * which matches any prefix
# Note: use period '.' instead of colon ':' as separator in key CURIEs
[relations]
sapo.partof=skos:broader
