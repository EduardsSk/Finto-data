# Skosify configuration file for transforming simple OWL or RDFS ontologies into SKOS

# runtime options which correspond to command line parameters
[options]
narrower=True
transitive=False
aggregates=False
debug=False
default_language=fi
eliminate_redundancy=True
mark_top_concepts=True
set_modified=True

update_query=
	PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
	PREFIX skos: <http://www.w3.org/2004/02/skos/core#>

	DELETE {
	  ?a skos:topConceptOf ?s .
	} WHERE {
	  ?a skos:broader ?b .
      ?a skos:topConceptOf ?s .
	}

# define custom RDF namespaces that can then be used in the mappings below (and will also be used in the output file)
# Note that common namespaces are already defined: rdf, rdfs, owl, skos, dc, dct
[namespaces]

# define what to do with types in the source vocabulary, i.e. how these map to SKOS constructs
# key: CURIE or localname (string)
# value: CURIE or empty (to delete the instances)
# the <key> instances will be replaced with <value> instances.
# key may start with * which matches any localname prefix
# Note: use period '.' instead of colon ':' as separator in key CURIEs
[types]
#owl.Class=skos:Concept

# define what to do with literal properties on Concepts
# key: CURIE or localname (string)
# value: CURIE or empty (to delete the property)
# the <key> properties will be replaced with <value> properties
# key may start with * which matches any prefix
# Note: use period '.' instead of colon ':' as separator in key CURIEs
[literals]
rdfs.label=skos:prefLabel
skos.notation=

# define what to do with relation properties on Concepts
# key: CURIE or localname (string)
# value: CURIE or empty (to delete the property)
# the <key> properties will be replaced with <value> properties
# key may start with * which matches any prefix
# Note: use period '.' instead of colon ':' as separator in key CURIEs
[relations]

